{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/scenes/Feedback/index.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-right: 10px;\\n  font-size: 24px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #484848;\\n  & a {\\n    font-weight: bold;\\n  }\\n  & div {\\n    padding: 3px 0px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Banner from \"../../components/atoms/Banner\";\nimport Container from \"../../components/atoms/Container\";\nimport Card from \"../../components/atoms/Card\";\nimport { Grid } from \"@material-ui/core\";\nimport FeedbackForm from \"../../components/organisms/FeedbackForm\";\nimport { fetchFeedbackTypes, sendFeedback } from \"../../services/redux/actions/feedback\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../components/atoms/Notification\";\nimport Heading from \"../../components/atoms/SectionSubHeading\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload, faQuestionCircle, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction index(props) {\n  if (props.feedbackTypes.length == 0) {\n    props.fetchFeedbackTypes();\n  }\n\n  const onSubmit = async (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    await props.sendFeedback({\n      data: _objectSpread({}, values, {\n        type_id: values.feedbackType\n      })\n    }).then(() => {\n      toast.info(React.createElement(Notification, {\n        message: \"Feedback Sent!!!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }).catch(() => {\n      toast.info(React.createElement(Notification, {\n        error: true,\n        message: \"Failed To send Feedback. Please, Try Again\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    });\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Banner, {\n    title: \"Get in Touch With Us\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Container, {\n    style: {\n      paddingTop: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Card, {\n    bodyStyle: {\n      padding: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Feedback Form\"), React.createElement(FeedbackForm, {\n    onSubmit: onSubmit,\n    feedbackTypes: props.feedbackTypes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Please give us your feedback on the experience you have using this system. We will be glad to assist with any problems you may be having. Comments and recommendations for future improvements are also welcome.\"), React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Useful Links\"), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: faDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \"Download Guides\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: faInfoCircle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"About Ministry of Health\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: faQuestionCircle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"Help\")))))));\n}\n\nconst mapStateToProps = state => ({\n  feedbackTypes: state.feedback.feedbackTypes\n});\n\nexport default connect(mapStateToProps, {\n  fetchFeedbackTypes,\n  sendFeedback\n})(index);\nconst TextContainer = styled.div(_templateObject());\nconst Icon = styled(FontAwesomeIcon)(_templateObject2());","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/scenes/Feedback/index.tsx"],"names":["React","Banner","Container","Card","Grid","FeedbackForm","fetchFeedbackTypes","sendFeedback","connect","toast","Notification","Heading","styled","FontAwesomeIcon","faDownload","faQuestionCircle","faInfoCircle","index","props","feedbackTypes","length","onSubmit","values","setSubmitting","resetForm","data","type_id","feedbackType","then","info","catch","paddingTop","padding","mapStateToProps","state","feedback","TextContainer","div","Icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Banner from \"../../components/atoms/Banner\";\nimport Container from \"../../components/atoms/Container\";\nimport Card from \"../../components/atoms/Card\";\nimport { Grid } from \"@material-ui/core\";\nimport FeedbackForm from \"../../components/organisms/FeedbackForm\";\nimport {\n  fetchFeedbackTypes,\n  sendFeedback\n} from \"../../services/redux/actions/feedback\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../components/atoms/Notification\";\nimport Heading from \"../../components/atoms/SectionSubHeading\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDownload,\n  faQuestionCircle,\n  faInfoCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction index(props: any) {\n  if (props.feedbackTypes.length == 0) {\n    props.fetchFeedbackTypes();\n  }\n\n  const onSubmit = async (values: any, { setSubmitting, resetForm }: any) => {\n    await props\n      .sendFeedback({\n        data: {\n          ...values,\n          type_id: values.feedbackType\n        }\n      })\n      .then(() => {\n        toast.info(<Notification message=\"Feedback Sent!!!\" />);\n      })\n      .catch(() => {\n        toast.info(\n          <Notification\n            error\n            message=\"Failed To send Feedback. Please, Try Again\"\n          />\n        );\n      });\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Banner title=\"Get in Touch With Us\" />\n      <Container style={{ paddingTop: \"20px\" }}>\n        <Grid container spacing={40}>\n          <Grid item xs={12} sm={12} md={6}>\n            <Card bodyStyle={{ padding: \"20px\" }}>\n              <Heading>Feedback Form</Heading>\n              <FeedbackForm\n                onSubmit={onSubmit}\n                feedbackTypes={props.feedbackTypes}\n              />\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6}>\n            <Heading>Instructions</Heading>\n            <TextContainer>\n              Please give us your feedback on the experience you have using this\n              system. We will be glad to assist with any problems you may be\n              having. Comments and recommendations for future improvements are\n              also welcome.\n            </TextContainer>\n            <Heading>Useful Links</Heading>\n            <TextContainer>\n              <div>\n                <a href=\"/\">\n                  <Icon icon={faDownload} />\n                  Download Guides\n                </a>\n              </div>\n              <div>\n                <a href=\"/\">\n                  <Icon icon={faInfoCircle} />\n                  About Ministry of Health\n                </a>\n              </div>\n              <div>\n                <a href=\"/\">\n                  <Icon icon={faQuestionCircle} />\n                  Help\n                </a>\n              </div>\n            </TextContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\nconst mapStateToProps = (state: any) => ({\n  feedbackTypes: state.feedback.feedbackTypes\n});\nexport default connect(\n  mapStateToProps,\n  { fetchFeedbackTypes, sendFeedback }\n)(index);\n\nconst TextContainer = styled.div`\n  color: #484848;\n  & a {\n    font-weight: bold;\n  }\n  & div {\n    padding: 3px 0px;\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 10px;\n  font-size: 24px;\n`;\n"]},"metadata":{},"sourceType":"module"}