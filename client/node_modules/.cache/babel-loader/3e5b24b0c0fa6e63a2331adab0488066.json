{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/components/organisms/FacilityForms/Resources.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 3rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\"; // @ts-ignore\n\nimport { TextField, FormControl, FormHelperText } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport FormButtons from \"../../atoms/FacilityFormButtons\";\n\nfunction Basic(props) {\n  const initialValues = props.initialValues,\n        schema = props.schema,\n        onSubmit = props.onSubmit;\n\n  const onNext = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    onSubmit(values, \"resources\", \"Utilities\");\n    setSubmitting(false);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: initialValues,\n    validationSchema: schema,\n    onSubmit: onNext,\n    render: formikProps => React.createElement(Form, Object.assign({}, props, formikProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n}\n\nexport default Basic;\nexport function Form(props) {\n  let values = props.values,\n      errors = props.errors,\n      touched = props.touched,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit,\n      handleBlur = props.handleBlur,\n      isSubmitting = props.isSubmitting,\n      dependancies = props.dependancies,\n      onCancel = props.onCancel,\n      fromAdd = props.fromAdd;\n  return React.createElement(React.Fragment, null, React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, dependancies.resources.list.map(resource => React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: \"mfl-max-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: values && values[\"resource_\".concat(resource.id)],\n    name: \"resource_\".concat(resource.id),\n    label: \"\".concat(resource.resource_name),\n    placeholder: \"Enter Facility Postal Address\",\n    error: values && touched[\"resource_\".concat(resource.id)] && errors[\"resource_\".concat(resource.id)],\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), values && touched[\"resource_\".concat(resource.id)] && errors[\"resource_\".concat(resource.id)] && React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, errors[\"resource_\".concat(resource.id)])))))), React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(FormButtons, {\n    handleSubmit: handleSubmit,\n    handleCancel: onCancel,\n    saveBtnText: fromAdd ? \"Next\" : \"Save\",\n    isSubmitting: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))));\n}\nconst FormWrapper = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/components/organisms/FacilityForms/Resources.tsx"],"names":["React","Formik","Paper","Grid","TextField","FormControl","FormHelperText","styled","FormButtons","Basic","props","initialValues","schema","onSubmit","onNext","values","setSubmitting","setErrors","formikProps","Form","errors","touched","handleChange","handleSubmit","handleBlur","isSubmitting","dependancies","onCancel","fromAdd","resources","list","map","resource","id","resource_name","FormWrapper","div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n// @ts-ignore\nimport { TextField, FormControl, FormHelperText } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport FormButtons from \"../../atoms/FacilityFormButtons\";\n\nfunction Basic(props: Props) {\n  const { initialValues, schema, onSubmit } = props;\n\n  const onNext = async (values: any, { setSubmitting, setErrors }: any) => {\n    onSubmit(values, \"resources\", \"Utilities\");\n    setSubmitting(false);\n  };\n\n  return (\n    <Paper>\n      <div>\n        <Formik\n          enableReinitialize={true}\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={onNext}\n          render={formikProps => <Form {...props} {...formikProps} />}\n        />\n      </div>\n    </Paper>\n  );\n}\n\nexport default Basic;\n\nexport function Form(props: any) {\n  let {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    isSubmitting,\n    dependancies,\n    onCancel,\n    fromAdd\n  } = props;\n  return (\n    <>\n      <FormWrapper>\n        <Grid container spacing={24}>\n          {dependancies.resources.list.map((resource: any) => (\n            <Grid item sm={12} md={3}>\n              <FormControl className=\"mfl-max-width\">\n                <TextField\n                  value={values && values[`resource_${resource.id}`]}\n                  name={`resource_${resource.id}`}\n                  label={`${resource.resource_name}`}\n                  placeholder=\"Enter Facility Postal Address\"\n                  error={\n                    values &&\n                    touched[`resource_${resource.id}`] &&\n                    errors[`resource_${resource.id}`]\n                  }\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {values &&\n                  touched[`resource_${resource.id}`] &&\n                  errors[`resource_${resource.id}`] && (\n                    <FormHelperText id=\"component-error-text\">\n                      {errors[`resource_${resource.id}`]}\n                    </FormHelperText>\n                  )}\n              </FormControl>\n            </Grid>\n          ))}\n        </Grid>\n      </FormWrapper>\n      <Grid container spacing={24}>\n        <Grid item sm={12} md={12}>\n          <FormButtons\n            handleSubmit={handleSubmit}\n            handleCancel={onCancel}\n            saveBtnText={fromAdd ? \"Next\" : \"Save\"}\n            isSubmitting={isSubmitting}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\ntype Props = {\n  initialValues: any;\n  schema: any;\n  onSubmit: any;\n  networkError: Array<any>;\n  dependancies: any;\n  onCancel: Function;\n  fromAdd?: boolean;\n};\n\nconst FormWrapper = styled.div`\n  padding: 3rem;\n`;\n"]},"metadata":{},"sourceType":"module"}