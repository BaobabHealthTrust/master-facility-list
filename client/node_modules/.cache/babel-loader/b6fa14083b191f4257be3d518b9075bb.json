{"ast":null,"code":"var _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/scenes/Facility/ViewFacility/index.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // @ts-ignore\n\nimport { split } from \"lodash\";\nimport { fetchCurrentResources, fetchCurrentBasic, fetchCurrentServices, fetchCurrentUtilities } from \"../../../services/redux/actions/facilities\";\nimport { setActiveFacilityPage } from \"../../../services/redux/actions/ui\";\nimport ViewFacility from \"./ViewFacility\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faHospital, faEnvelope, faBed, faWifi, faStethoscope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FacilityPages as pages } from \"../../../services/utils\";\nlibrary.add(faPlus, faHospital, faEnvelope, faBed, faWifi, faStethoscope);\nexport class index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      facilityId: null\n    };\n    this.facilitySubMenu = [{\n      link: pages.summary,\n      name: \"Facility Summary\",\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faHospital,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })\n    }, {\n      link: pages.contact,\n      name: \"Facility Contacts\",\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faEnvelope,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })\n    }, {\n      link: pages.resources,\n      name: \"Facility Resources\",\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faBed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })\n    }, {\n      link: pages.utilities,\n      name: \"Facility Utilities\",\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faWifi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })\n    }, {\n      link: pages.services,\n      name: \"Facility Services\",\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faStethoscope,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })\n    }];\n\n    this.handlePageChange = page => {\n      this.props.setActiveFacilityPage(page);\n      this.props.history.push(\"/facilities/\".concat(this.state.facilityId, \"/\").concat(page));\n    };\n  }\n\n  componentDidMount() {\n    let location = split(window.location.pathname, \"/\");\n    let facilityId = location.length == 3 ? location[location.length - 1] : location[location.length - 2];\n    let currentPage = location.length == 3 ? pages.summary : location[location.length - 1];\n    this.props.setActiveFacilityPage(currentPage);\n    this.setState({\n      facilityId\n    });\n    this.props.fetchCurrentBasic(facilityId);\n    this.props.fetchCurrentResources(facilityId);\n    this.props.fetchCurrentServices(facilityId);\n    this.props.fetchCurrentUtilities(facilityId);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.match.params.id && newProps.match.params.id != this.state.facilityId) {\n      let facilityId = newProps.match.params.id;\n      this.setState({\n        facilityId\n      });\n      this.props.fetchCurrentBasic(facilityId);\n      this.props.fetchCurrentResources(facilityId);\n      this.props.fetchCurrentServices(facilityId);\n      this.props.fetchCurrentUtilities(facilityId);\n    }\n  }\n\n  render() {\n    const facility = this.props.facility;\n    const services = facility.services,\n          utilities = facility.utilities,\n          resources = facility.resources;\n    return React.createElement(ViewFacility, {\n      activePage: this.props.ui.activeFacilityPage,\n      basic: facility,\n      resources: resources,\n      utilities: utilities,\n      services: services,\n      onChangePage: page => {\n        this.handlePageChange(page);\n      },\n      onEditDetails: () => {},\n      facilitySubMenu: this.facilitySubMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ui: state.ui,\n  facility: state.facilities.current\n});\n\nexport default connect(mapStateToProps, {\n  fetchCurrentResources,\n  fetchCurrentBasic,\n  fetchCurrentServices,\n  fetchCurrentUtilities,\n  setActiveFacilityPage\n})(index);","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/scenes/Facility/ViewFacility/index.tsx"],"names":["React","Component","connect","split","fetchCurrentResources","fetchCurrentBasic","fetchCurrentServices","fetchCurrentUtilities","setActiveFacilityPage","ViewFacility","library","FontAwesomeIcon","faPlus","faHospital","faEnvelope","faBed","faWifi","faStethoscope","FacilityPages","pages","add","index","state","facilityId","facilitySubMenu","link","summary","name","icon","contact","resources","utilities","services","handlePageChange","page","props","history","push","componentDidMount","location","window","pathname","length","currentPage","setState","componentWillReceiveProps","newProps","match","params","id","render","facility","ui","activeFacilityPage","mapStateToProps","facilities","current"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// @ts-ignore\nimport { split } from \"lodash\";\nimport {\n  fetchCurrentResources,\n  fetchCurrentBasic,\n  fetchCurrentServices,\n  fetchCurrentUtilities\n} from \"../../../services/redux/actions/facilities\";\nimport { setActiveFacilityPage } from \"../../../services/redux/actions/ui\";\nimport ViewFacility from \"./ViewFacility\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faHospital,\n  faEnvelope,\n  faBed,\n  faWifi,\n  faStethoscope\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FacilityPages as pages } from \"../../../services/utils\";\n\nlibrary.add(faPlus, faHospital, faEnvelope, faBed, faWifi, faStethoscope);\n\nexport class index extends Component<any> {\n  state = {\n    facilityId: null\n  };\n\n  facilitySubMenu = [\n    {\n      link: pages.summary,\n      name: \"Facility Summary\",\n      icon: <FontAwesomeIcon icon={faHospital} />\n    },\n    {\n      link: pages.contact,\n      name: \"Facility Contacts\",\n      icon: <FontAwesomeIcon icon={faEnvelope} />\n    },\n    {\n      link: pages.resources,\n      name: \"Facility Resources\",\n      icon: <FontAwesomeIcon icon={faBed} />\n    },\n    {\n      link: pages.utilities,\n      name: \"Facility Utilities\",\n      icon: <FontAwesomeIcon icon={faWifi} />\n    },\n    {\n      link: pages.services,\n      name: \"Facility Services\",\n      icon: <FontAwesomeIcon icon={faStethoscope} />\n    }\n  ];\n\n  handlePageChange = (page: any) => {\n    this.props.setActiveFacilityPage(page);\n    this.props.history.push(`/facilities/${this.state.facilityId}/${page}`);\n  };\n\n  componentDidMount() {\n    let location = split(window.location.pathname, \"/\");\n    let facilityId =\n      location.length == 3\n        ? location[location.length - 1]\n        : location[location.length - 2];\n    let currentPage =\n      location.length == 3 ? pages.summary : location[location.length - 1];\n\n    this.props.setActiveFacilityPage(currentPage);\n    this.setState({ facilityId });\n\n    this.props.fetchCurrentBasic(facilityId);\n    this.props.fetchCurrentResources(facilityId);\n    this.props.fetchCurrentServices(facilityId);\n    this.props.fetchCurrentUtilities(facilityId);\n  }\n\n  componentWillReceiveProps(newProps: any) {\n    if (\n      newProps.match.params.id &&\n      newProps.match.params.id != this.state.facilityId\n    ) {\n      let facilityId = newProps.match.params.id;\n      this.setState({ facilityId });\n      this.props.fetchCurrentBasic(facilityId);\n      this.props.fetchCurrentResources(facilityId);\n      this.props.fetchCurrentServices(facilityId);\n      this.props.fetchCurrentUtilities(facilityId);\n    }\n  }\n  render() {\n    const { facility } = this.props;\n    const { services, utilities, resources } = facility;\n\n    return (\n      <ViewFacility\n        activePage={this.props.ui.activeFacilityPage}\n        basic={facility}\n        resources={resources}\n        utilities={utilities}\n        services={services}\n        onChangePage={(page: any) => {\n          this.handlePageChange(page);\n        }}\n        onEditDetails={() => {}}\n        facilitySubMenu={this.facilitySubMenu}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  ui: state.ui,\n  facility: state.facilities.current\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchCurrentResources,\n    fetchCurrentBasic,\n    fetchCurrentServices,\n    fetchCurrentUtilities,\n    setActiveFacilityPage\n  }\n)(index);\n"]},"metadata":{},"sourceType":"module"}