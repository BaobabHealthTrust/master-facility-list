{"ast":null,"code":"var _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/components/molecules/FacilityServices.tsx\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport SectionTitle from \"../atoms/FacilityViewSectionTitle\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBolt, faFilter, faMobile, faTrash, faCogs } from \"@fortawesome/free-solid-svg-icons\"; // @ts-ignore\n\nimport { chunk } from \"lodash\";\nlibrary.add(faBolt, faFilter, faMobile, faTrash, faCogs);\n\nfunction FacilityDetails(props) {\n  const services = props.services;\n  const levelStyles = [{\n    fontSize: \"16px\",\n    padding: \"5px 0\"\n  }, {\n    borderTop: \"1px #f1f1f1 solid\",\n    marginLeft: \"11px\",\n    padding: \"5px 0\",\n    marginTop: \"5px\"\n  }, {\n    color: \"#7d7d7d\",\n    marginLeft: \"12px\",\n    fontSize: \"12px\"\n  }];\n\n  const getServiceTypeIcon = serviceType => {\n    switch (serviceType.toUpperCase()) {\n      case \"Clinical Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n\n      case \"Therapeutical Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n\n      case \"Prosthetics and Medical Devices Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n\n      case \"Nutrition\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n\n      case \"Community Health Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n\n      case \"Reproductive and child health Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n\n      case \"Vaccination\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n\n      case \"Diagnostics Services\".toUpperCase():\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(FontAwesomeIcon, {\n          icon: faBolt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n    }\n  };\n\n  const getServiceTypes = () => services ? services.map(ser => ser.serviceType) : [];\n\n  const getServicesByType = (type, services) => services.filter(ser => ser.service.service_type_id === type.id);\n\n  const renderServicesForType = (type, services) => {\n    var data = getServicesByType(type, services);\n    return React.createElement(React.Fragment, null, React.createElement(SectionTitle, {\n      icon: getServiceTypeIcon(type.service_type),\n      text: type.service_type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), data.map(data => React.createElement(React.Fragment, null, renderService(data, levelStyles))));\n  };\n\n  const renderService = (service, levelStyles, level = 0) => {\n    if (typeof service.children === \"undefined\" || service.children.length === 0) {\n      return React.createElement(\"div\", {\n        style: levelStyles[level],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, service.service.service_name);\n    }\n\n    return React.createElement(\"div\", {\n      style: levelStyles[level],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, service.service.service_name, service.children.map(ser => renderService(ser, levelStyles, level + 1)));\n  };\n\n  const presentTypes = services ? getServiceTypes() : [];\n  const typeChunks = chunk(presentTypes, 3);\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, typeChunks.map(chunk => {\n    return React.createElement(React.Fragment, null, chunk.map(type => React.createElement(Grid, {\n      key: type,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, renderServicesForType(type, services))));\n  }));\n}\n\nexport default FacilityDetails;","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/components/molecules/FacilityServices.tsx"],"names":["React","Grid","SectionTitle","library","FontAwesomeIcon","faBolt","faFilter","faMobile","faTrash","faCogs","chunk","add","FacilityDetails","props","services","levelStyles","fontSize","padding","borderTop","marginLeft","marginTop","color","getServiceTypeIcon","serviceType","toUpperCase","getServiceTypes","map","ser","getServicesByType","type","filter","service","service_type_id","id","renderServicesForType","data","service_type","renderService","level","children","length","service_name","presentTypes","typeChunks"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport SectionTitle from \"../atoms/FacilityViewSectionTitle\";\nimport FacilityDetail from \"../atoms/FacilityDetail\";\nimport { connect } from \"react-redux\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFilter,\n  faMobile,\n  faTrash,\n  faCogs\n} from \"@fortawesome/free-solid-svg-icons\";\n// @ts-ignore\nimport { uniq, chunk } from \"lodash\";\n\nlibrary.add(faBolt, faFilter, faMobile, faTrash, faCogs);\n\nfunction FacilityDetails(props: Props) {\n  const { services } = props;\n\n  const levelStyles = [\n    {\n      fontSize: \"16px\",\n      padding: \"5px 0\"\n    },\n    {\n      borderTop: \"1px #f1f1f1 solid\",\n      marginLeft: \"11px\",\n      padding: \"5px 0\",\n      marginTop: \"5px\"\n    },\n    { color: \"#7d7d7d\", marginLeft: \"12px\", fontSize: \"12px\" }\n  ];\n\n  const getServiceTypeIcon = (serviceType: string) => {\n    switch (serviceType.toUpperCase()) {\n      case \"Clinical Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Therapeutical Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Prosthetics and Medical Devices Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Nutrition\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Community Health Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Reproductive and child health Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Vaccination\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      case \"Diagnostics Services\".toUpperCase():\n        return <FontAwesomeIcon icon={faBolt} />;\n      default:\n        return <FontAwesomeIcon icon={faBolt} />;\n    }\n  };\n\n  const getServiceTypes = () =>\n    services ? services.map((ser: any) => ser.serviceType) : [];\n\n  const getServicesByType = (type: any, services: any) =>\n    services.filter((ser: any) => ser.service.service_type_id === type.id);\n\n  const renderServicesForType = (type: any, services: any) => {\n    var data = getServicesByType(type, services);\n    return (\n      <>\n        <SectionTitle\n          icon={getServiceTypeIcon(type.service_type)}\n          text={type.service_type}\n        />\n        {data.map((data: any) => (\n          <>{renderService(data, levelStyles)}</>\n        ))}\n      </>\n    );\n  };\n\n  const renderService = (service: any, levelStyles: any, level = 0) => {\n    if (\n      typeof service.children === \"undefined\" ||\n      service.children.length === 0\n    ) {\n      return (\n        <div style={levelStyles[level]}>{service.service.service_name}</div>\n      );\n    }\n    return (\n      <div style={levelStyles[level]}>\n        {service.service.service_name}\n        {service.children.map((ser: any) =>\n          renderService(ser, levelStyles, level + 1)\n        )}\n      </div>\n    );\n  };\n\n  const presentTypes = services ? getServiceTypes() : [];\n\n  const typeChunks = chunk(presentTypes, 3);\n\n  return (\n    <Grid container>\n      {typeChunks.map((chunk: any) => {\n        return (\n          <>\n            {chunk.map((type: any) => (\n              <Grid key={type} xs={12} sm={6} md={6}>\n                {renderServicesForType(type, services)}\n              </Grid>\n            ))}\n          </>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default FacilityDetails;\n\ntype Props = {\n  services: any;\n};\n"]},"metadata":{},"sourceType":"module"}