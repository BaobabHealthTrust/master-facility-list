{"ast":null,"code":"var _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/services/helpers.tsx\";\nimport React from \"react\";\nimport { MenuItem } from \"@material-ui/core\"; // @ts-ignore\n\nimport { intersection, slice } from \"lodash\";\nexport const renderOptions = (dependancy, entityName) => {\n  return dependancy.map(entity => React.createElement(MenuItem, {\n    key: entity.id,\n    value: entity.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, entity[entityName]));\n}; // @ts-ignore\n\nexport const groupIntersect = val => {\n  const mapped = val.filter(value => value != null || typeof value != \"undefined\");\n\n  if (mapped.length <= 1) {\n    if (mapped.length == 0) return [];\n    return mapped[0].filter(value => value != null || typeof value != \"undefined\");\n  }\n\n  return intersection(mapped[0], groupIntersect(slice(mapped, 1, mapped.length)));\n};\nexport const hasFilterValuesForType = (type, values) => {\n  switch (type) {\n    case \"basic\":\n      return values.filter(val => val.type === \"districts\" || val.type === \"facilityTypes\" || val.type === \"regulatoryStatuses\" || val.type === \"operationalStatuses\" || val.type === \"facilityOwners\").length > 0;\n\n    default:\n      return values.filter(val => val.type === type).length > 0;\n  }\n};","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/services/helpers.tsx"],"names":["React","MenuItem","intersection","slice","renderOptions","dependancy","entityName","map","entity","id","groupIntersect","val","mapped","filter","value","length","hasFilterValuesForType","type","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CACA;;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,QAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAkBC,UAAlB,KAAyC;AACpE,SAAOD,UAAU,CAACE,GAAX,CAAgBC,MAAD,IACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,MAAM,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACF,UAAD,CADT,CADK,CAAP;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMI,cAAc,GAAIC,GAAD,IAAqB;AACjD,QAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CACbC,KAAK,IAAIA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,IAAgB,WAD7B,CAAf;;AAIA,MAAIF,MAAM,CAACG,MAAP,IAAiB,CAArB,EAAwB;AACtB,QAAIH,MAAM,CAACG,MAAP,IAAiB,CAArB,EAAwB,OAAO,EAAP;AACxB,WAAOH,MAAM,CAAC,CAAD,CAAN,CAAUC,MAAV,CACJC,KAAD,IAAgBA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAP,IAAgB,WAD5C,CAAP;AAGD;;AAED,SAAOZ,YAAY,CACjBU,MAAM,CAAC,CAAD,CADW,EAEjBF,cAAc,CAACP,KAAK,CAACS,MAAD,EAAS,CAAT,EAAYA,MAAM,CAACG,MAAnB,CAAN,CAFG,CAAnB;AAID,CAhBM;AAkBP,OAAO,MAAMC,sBAAsB,GAAG,CAACC,IAAD,EAAeC,MAAf,KAAsC;AAC1E,UAAQD,IAAR;AACE,SAAK,OAAL;AACE,aACEC,MAAM,CAACL,MAAP,CACEF,GAAG,IACDA,GAAG,CAACM,IAAJ,KAAa,WAAb,IACAN,GAAG,CAACM,IAAJ,KAAa,eADb,IAEAN,GAAG,CAACM,IAAJ,KAAa,oBAFb,IAGAN,GAAG,CAACM,IAAJ,KAAa,qBAHb,IAIAN,GAAG,CAACM,IAAJ,KAAa,gBANjB,EAOEF,MAPF,GAOW,CARb;;AAWF;AACE,aAAOG,MAAM,CAACL,MAAP,CAAcF,GAAG,IAAIA,GAAG,CAACM,IAAJ,KAAaA,IAAlC,EAAwCF,MAAxC,GAAiD,CAAxD;AAdJ;AAgBD,CAjBM","sourcesContent":["import React from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\n// @ts-ignore\nimport { intersection, slice } from \"lodash\";\n\nexport const renderOptions = (dependancy: any, entityName: string) => {\n  return dependancy.map((entity: any) => (\n    <MenuItem key={entity.id} value={entity.id}>\n      {entity[entityName]}\n    </MenuItem>\n  ));\n};\n\n// @ts-ignore\nexport const groupIntersect = (val: Array<any>) => {\n  const mapped = val.filter(\n    value => value != null || typeof value != \"undefined\"\n  );\n\n  if (mapped.length <= 1) {\n    if (mapped.length == 0) return [];\n    return mapped[0].filter(\n      (value: any) => value != null || typeof value != \"undefined\"\n    );\n  }\n\n  return intersection(\n    mapped[0],\n    groupIntersect(slice(mapped, 1, mapped.length))\n  );\n};\n\nexport const hasFilterValuesForType = (type: string, values: Array<any>) => {\n  switch (type) {\n    case \"basic\":\n      return (\n        values.filter(\n          val =>\n            val.type === \"districts\" ||\n            val.type === \"facilityTypes\" ||\n            val.type === \"regulatoryStatuses\" ||\n            val.type === \"operationalStatuses\" ||\n            val.type === \"facilityOwners\"\n        ).length > 0\n      );\n\n    default:\n      return values.filter(val => val.type === type).length > 0;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}