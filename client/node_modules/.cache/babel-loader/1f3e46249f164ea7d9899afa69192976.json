{"ast":null,"code":"import _objectSpread from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/components/molecules/FacilityResourcesFilterTab.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 15px 30px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport SliderInput from \"../atoms/SliderInput/index.js\";\nconst Container = styled.div(_templateObject());\nexport function ResourcesFilter(props) {\n  const resources = props.dependancies.resources;\n  const range = {\n    min: 0,\n    max: 1000\n  };\n  const initialResourceValues = props.filterOptions.filter(filter => filter.type == \"resources\");\n  const resourcesFieldsData = resources.list ? resources.list.map(resource => {\n    return _objectSpread({\n      name: resource.resource_name,\n      id: resource.id\n    }, range, {\n      values: [range.min, range.max]\n    });\n  }) : [];\n\n  const onChange = (field, values) => {\n    const value = {\n      type: \"resources\",\n      id: field.id,\n      label: field.name,\n      values,\n      range: true\n    };\n    props.onAddFilter(value);\n  };\n\n  const setInitialValues = field => {\n    let initialValues = initialResourceValues.filter(filter => filter.id == field.id).map(filter => filter.values);\n    return initialValues.length > 0 ? _objectSpread({}, field, {\n      values: initialValues[0]\n    }) : field;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, resourcesFieldsData.map(field => {\n    field = setInitialValues(field);\n    return React.createElement(SliderInput, {\n      field: field,\n      onChange: (name, values) => onChange(field, values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }));\n}\nexport default ResourcesFilter;","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/components/molecules/FacilityResourcesFilterTab.tsx"],"names":["React","styled","SliderInput","Container","div","ResourcesFilter","props","resources","dependancies","range","min","max","initialResourceValues","filterOptions","filter","type","resourcesFieldsData","list","map","resource","name","resource_name","id","values","onChange","field","value","label","onAddFilter","setInitialValues","initialValues","length"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;AAIA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;AAAA,QAClCC,SADkC,GACpBD,KAAK,CAACE,YADc,CAClCD,SADkC;AAE1C,QAAME,KAAK,GAAG;AACZC,IAAAA,GAAG,EAAE,CADO;AAEZC,IAAAA,GAAG,EAAE;AAFO,GAAd;AAKA,QAAMC,qBAAqB,GAAGN,KAAK,CAACO,aAAN,CAAoBC,MAApB,CAC3BA,MAAD,IAAiBA,MAAM,CAACC,IAAP,IAAe,WADJ,CAA9B;AAIA,QAAMC,mBAAmB,GAAGT,SAAS,CAACU,IAAV,GACxBV,SAAS,CAACU,IAAV,CAAeC,GAAf,CAAoBC,QAAD,IAAmB;AACpC;AACEC,MAAAA,IAAI,EAAED,QAAQ,CAACE,aADjB;AAEEC,MAAAA,EAAE,EAAEH,QAAQ,CAACG;AAFf,OAGKb,KAHL;AAIEc,MAAAA,MAAM,EAAE,CAACd,KAAK,CAACC,GAAP,EAAYD,KAAK,CAACE,GAAlB;AAJV;AAMD,GAPD,CADwB,GASxB,EATJ;;AAWA,QAAMa,QAAQ,GAAG,CAACC,KAAD,EAAaF,MAAb,KAA6B;AAC5C,UAAMG,KAAK,GAAG;AACZX,MAAAA,IAAI,EAAE,WADM;AAEZO,MAAAA,EAAE,EAAEG,KAAK,CAACH,EAFE;AAGZK,MAAAA,KAAK,EAAEF,KAAK,CAACL,IAHD;AAIZG,MAAAA,MAJY;AAKZd,MAAAA,KAAK,EAAE;AALK,KAAd;AAOAH,IAAAA,KAAK,CAACsB,WAAN,CAAkBF,KAAlB;AACD,GATD;;AAWA,QAAMG,gBAAgB,GAAIJ,KAAD,IAAgB;AACvC,QAAIK,aAAa,GAAGlB,qBAAqB,CACtCE,MADiB,CACTA,MAAD,IAAiBA,MAAM,CAACQ,EAAP,IAAaG,KAAK,CAACH,EAD1B,EAEjBJ,GAFiB,CAEZJ,MAAD,IAAiBA,MAAM,CAACS,MAFX,CAApB;AAIA,WAAOO,aAAa,CAACC,MAAd,GAAuB,CAAvB,qBAEEN,KAFF;AAGDF,MAAAA,MAAM,EAAEO,aAAa,CAAC,CAAD;AAHpB,SAKHL,KALJ;AAMD,GAXD;;AAaA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,mBAAmB,CAACE,GAApB,CAAyBO,KAAD,IAAgB;AACvCA,IAAAA,KAAK,GAAGI,gBAAgB,CAACJ,KAAD,CAAxB;AAEA,WACE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,QAAQ,EAAE,CAACL,IAAD,EAAYG,MAAZ,KAA4BC,QAAQ,CAACC,KAAD,EAAQF,MAAR,CAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GATA,CADH,CADF;AAcD;AAED,eAAelB,eAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport SliderInput from \"../atoms/SliderInput/index.js\";\n\nconst Container = styled.div`\n  padding: 15px 30px;\n`;\n\nexport function ResourcesFilter(props: any) {\n  const { resources } = props.dependancies;\n  const range = {\n    min: 0,\n    max: 1000\n  };\n\n  const initialResourceValues = props.filterOptions.filter(\n    (filter: any) => filter.type == \"resources\"\n  );\n\n  const resourcesFieldsData = resources.list\n    ? resources.list.map((resource: any) => {\n        return {\n          name: resource.resource_name,\n          id: resource.id,\n          ...range,\n          values: [range.min, range.max]\n        };\n      })\n    : [];\n\n  const onChange = (field: any, values: any) => {\n    const value = {\n      type: \"resources\",\n      id: field.id,\n      label: field.name,\n      values,\n      range: true\n    };\n    props.onAddFilter(value);\n  };\n\n  const setInitialValues = (field: any) => {\n    let initialValues = initialResourceValues\n      .filter((filter: any) => filter.id == field.id)\n      .map((filter: any) => filter.values);\n\n    return initialValues.length > 0\n      ? {\n          ...field,\n          values: initialValues[0]\n        }\n      : field;\n  };\n\n  return (\n    <Container>\n      {resourcesFieldsData.map((field: any) => {\n        field = setInitialValues(field);\n\n        return (\n          <SliderInput\n            field={field}\n            onChange={(name: any, values: any) => onChange(field, values)}\n          />\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default ResourcesFilter;\n"]},"metadata":{},"sourceType":"module"}