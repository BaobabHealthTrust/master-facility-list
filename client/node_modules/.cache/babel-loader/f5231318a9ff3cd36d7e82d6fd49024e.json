{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/components/organisms/FacilityForms/Utilities.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 3rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\"; // @ts-ignore\n\nimport { Checkbox } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport FormButtons from \"../../atoms/FacilityFormButtons\"; // @ts-ignore\n\nfunction Basic(props) {\n  const initialValues = props.initialValues,\n        onSubmit = props.onSubmit;\n\n  const onNext = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    onSubmit(values.utilities, \"utilities\", \"Services\");\n    setSubmitting(false);\n  };\n\n  return React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: onNext,\n    render: formikProps => React.createElement(Form, Object.assign({}, props, formikProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n}\n\nexport default Basic;\nexport function Form(props) {\n  let values = props.values,\n      errors = props.errors,\n      touched = props.touched,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit,\n      handleBlur = props.handleBlur,\n      isSubmitting = props.isSubmitting,\n      setFieldValue = props.setFieldValue,\n      dependancies = props.dependancies,\n      onCancel = props.onCancel,\n      fromAdd = props.fromAdd;\n\n  const onUtilityClick = async utility => {\n    let utilities = values.utilities;\n\n    if (!utilities.includes(utility.id)) {\n      utilities.push(utility.id);\n      setFieldValue(utilities, utilities);\n    } else {\n      let index = utilities.indexOf(utility.id);\n      utilities = utilities.splice(index, 1);\n      setFieldValue(utilities, utilities);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, dependancies.utilities.types.map(type => React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, type.utility_type, React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, dependancies.utilities.list.filter(util => util.utility_type_id === type.id).map(utility => React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    md: 6,\n    key: \"utilities\".concat(utility.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    value: \"utilities\".concat(utility.id),\n    checked: values.utilities.includes(utility.id),\n    onChange: () => onUtilityClick(utility),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })))))))), React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FormButtons, {\n    handleSubmit: handleSubmit,\n    handleCancel: onCancel,\n    saveBtnText: fromAdd ? \"Next\" : \"Save\",\n    isSubmitting: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))));\n}\nconst FormWrapper = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/components/organisms/FacilityForms/Utilities.tsx"],"names":["React","Formik","Paper","Grid","Checkbox","styled","FormButtons","Basic","props","initialValues","onSubmit","onNext","values","setSubmitting","setErrors","utilities","formikProps","Form","errors","touched","handleChange","handleSubmit","handleBlur","isSubmitting","setFieldValue","dependancies","onCancel","fromAdd","onUtilityClick","utility","includes","id","push","index","indexOf","splice","types","map","type","utility_type","list","filter","util","utility_type_id","FormWrapper","div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n// @ts-ignore\nimport { Checkbox } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { renderOptions } from \"../../../services/helpers\";\nimport FormButtons from \"../../atoms/FacilityFormButtons\";\n// @ts-ignore\nimport { isEmpty } from \"lodash\";\nimport { resources } from \"./initialValues\";\n\nfunction Basic(props: Props) {\n  const { initialValues, onSubmit } = props;\n\n  const onNext = async (values: any, { setSubmitting, setErrors }: any) => {\n    onSubmit(values.utilities, \"utilities\", \"Services\");\n    setSubmitting(false);\n  };\n\n  return (\n    <Paper>\n      <div>\n        <Formik\n          enableReinitialize={true}\n          initialValues={initialValues}\n          onSubmit={onNext}\n          render={formikProps => <Form {...props} {...formikProps} />}\n        />\n      </div>\n    </Paper>\n  );\n}\n\nexport default Basic;\n\nexport function Form(props: any) {\n  let {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    isSubmitting,\n    setFieldValue,\n    dependancies,\n    onCancel,\n    fromAdd\n  } = props;\n\n  const onUtilityClick = async (utility: any) => {\n    let utilities = values.utilities;\n    if (!utilities.includes(utility.id)) {\n      utilities.push(utility.id);\n      setFieldValue(utilities, utilities);\n    } else {\n      let index = utilities.indexOf(utility.id);\n      utilities = utilities.splice(index, 1);\n      setFieldValue(utilities, utilities);\n    }\n  };\n  return (\n    <>\n      <FormWrapper>\n        <Grid container spacing={24}>\n          {dependancies.utilities.types.map((type: any) => (\n            <Grid item sm={12} md={6}>\n              {type.utility_type}\n              <Grid container spacing={24}>\n                {dependancies.utilities.list\n                  .filter((util: any) => util.utility_type_id === type.id)\n                  .map((utility: any) => (\n                    <Grid item sm={6} md={6} key={`utilities${utility.id}`}>\n                      <Checkbox\n                        value={`utilities${utility.id}`}\n                        checked={values.utilities.includes(utility.id)}\n                        onChange={() => onUtilityClick(utility)}\n                        color=\"primary\"\n                      />\n                    </Grid>\n                  ))}\n              </Grid>\n            </Grid>\n          ))}\n        </Grid>\n      </FormWrapper>\n      <Grid container spacing={24}>\n        <Grid item sm={12} md={12}>\n          <FormButtons\n            handleSubmit={handleSubmit}\n            handleCancel={onCancel}\n            saveBtnText={fromAdd ? \"Next\" : \"Save\"}\n            isSubmitting={isSubmitting}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\ntype Props = {\n  initialValues: any;\n  onSubmit: any;\n  networkError: Array<any>;\n  dependancies: any;\n  onCancel: Function;\n  fromAdd?: boolean;\n};\n\nconst FormWrapper = styled.div`\n  padding: 3rem;\n`;\n"]},"metadata":{},"sourceType":"module"}