{"ast":null,"code":"var _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/scenes/Login/index.tsx\";\nimport React, { Component } from \"react\";\nimport { userLogin, fetchUserDetails, setActivePage } from \"../../services/redux/actions/users\";\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\nexport class index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.attemptLogin = async values => {\n      const log = await this.props.userLogin(values).catch(error => {\n        return false;\n      });\n\n      if (!log) {\n        alert(\"failed\");\n        return;\n      }\n\n      await this.props.fetchUserDetails(this.props.auth.authDetails.userId, this.props.auth.authDetails.id);\n      await this.persistUserDetails(this.props.auth.authDetails.id);\n      this.props.history.push(\"/\");\n      this.props.setActivePage(\"home\");\n    };\n\n    this.persistUserDetails = async tokenId => {\n      await sessionStorage.setItem(\"token\", tokenId);\n      await sessionStorage.setItem(\"user\", JSON.stringify(this.props.auth.details));\n    };\n  }\n\n  render() {\n    return React.createElement(Login, {\n      onSubmit: this.attemptLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.users.currentUser\n});\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  fetchUserDetails,\n  setActivePage\n})(index);","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/scenes/Login/index.tsx"],"names":["React","Component","userLogin","fetchUserDetails","setActivePage","Login","connect","index","attemptLogin","values","log","props","catch","error","alert","auth","authDetails","userId","id","persistUserDetails","history","push","tokenId","sessionStorage","setItem","JSON","stringify","details","render","mapStateToProps","state","users","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,gBAFF,EAGEC,aAHF,QAIO,oCAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,KAAN,SAAoBN,SAApB,CAAqC;AAAA;AAAA;;AAAA,SAC1CO,YAD0C,GAC3B,MAAOC,MAAP,IAA0D;AACvE,YAAMC,GAAG,GAAG,MAAM,KAAKC,KAAL,CAAWT,SAAX,CAAqBO,MAArB,EAA6BG,KAA7B,CAAoCC,KAAD,IAAgB;AACnE,eAAO,KAAP;AACD,OAFiB,CAAlB;;AAGA,UAAI,CAACH,GAAL,EAAU;AACRI,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACD;;AAED,YAAM,KAAKH,KAAL,CAAWR,gBAAX,CACJ,KAAKQ,KAAL,CAAWI,IAAX,CAAgBC,WAAhB,CAA4BC,MADxB,EAEJ,KAAKN,KAAL,CAAWI,IAAX,CAAgBC,WAAhB,CAA4BE,EAFxB,CAAN;AAKA,YAAM,KAAKC,kBAAL,CAAwB,KAAKR,KAAL,CAAWI,IAAX,CAAgBC,WAAhB,CAA4BE,EAApD,CAAN;AAEA,WAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,WAAKV,KAAL,CAAWP,aAAX,CAAyB,MAAzB;AACD,KAnByC;;AAAA,SAqB1Ce,kBArB0C,GAqBrB,MAAOG,OAAP,IAA2B;AAC9C,YAAMC,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,OAAhC,CAAN;AACA,YAAMC,cAAc,CAACC,OAAf,CACJ,MADI,EAEJC,IAAI,CAACC,SAAL,CAAe,KAAKf,KAAL,CAAWI,IAAX,CAAgBY,OAA/B,CAFI,CAAN;AAID,KA3ByC;AAAA;;AA6B1CC,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKpB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA/ByC;;AA0C5C,MAAMqB,eAAe,GAAIC,KAAD,KAAiB;AAAEf,EAAAA,IAAI,EAAEe,KAAK,CAACC,KAAN,CAAYC;AAApB,CAAjB,CAAxB;;AAEA,eAAe1B,OAAO,CACpBuB,eADoB,EAEpB;AAAE3B,EAAAA,SAAF;AAAaC,EAAAA,gBAAb;AAA+BC,EAAAA;AAA/B,CAFoB,CAAP,CAGbG,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  userLogin,\n  fetchUserDetails,\n  setActivePage\n} from \"../../services/redux/actions/users\";\nimport Login from \"./Login\";\nimport { connect } from \"react-redux\";\n\nexport class index extends Component<Props> {\n  attemptLogin = async (values: { username: string; password: string }) => {\n    const log = await this.props.userLogin(values).catch((error: any) => {\n      return false;\n    });\n    if (!log) {\n      alert(\"failed\");\n      return;\n    }\n\n    await this.props.fetchUserDetails(\n      this.props.auth.authDetails.userId,\n      this.props.auth.authDetails.id\n    );\n\n    await this.persistUserDetails(this.props.auth.authDetails.id);\n\n    this.props.history.push(\"/\");\n    this.props.setActivePage(\"home\");\n  };\n\n  persistUserDetails = async (tokenId: string) => {\n    await sessionStorage.setItem(\"token\", tokenId);\n    await sessionStorage.setItem(\n      \"user\",\n      JSON.stringify(this.props.auth.details)\n    );\n  };\n\n  render() {\n    return <Login onSubmit={this.attemptLogin} />;\n  }\n}\n\ntype Props = {\n  userLogin: Function;\n  fetchUserDetails: Function;\n  setActivePage: Function;\n  auth: any;\n  history: any;\n};\n\nconst mapStateToProps = (state: any) => ({ auth: state.users.currentUser });\n\nexport default connect(\n  mapStateToProps,\n  { userLogin, fetchUserDetails, setActivePage }\n)(index);\n"]},"metadata":{},"sourceType":"module"}