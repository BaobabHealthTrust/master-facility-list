{"ast":null,"code":"import actions from \"./actions\";\nimport { getFacilities, getFacilityResources, getFacilityBasicDetails, getFacilityServices, getFacilityUtilities, postBasicDetails, postResources, postUtilities, postServices, publishFacility as publish, putBasicDetails, putContactDetails, putResources, putUtilities, deleteUtilities, putServices, deleteServices } from \"../../api\";\nimport { groupIntersect, hasFilterValuesForType } from \"../../helpers\";\nexport const fetchFacilities = () => {\n  return {\n    type: actions.fetchFacilities,\n    payload: getFacilities()\n  };\n};\nexport const fetchCurrentBasic = facilityId => {\n  return {\n    type: actions.fetchCurrentBasic,\n    payload: getFacilityBasicDetails(facilityId)\n  };\n};\nexport const setQuickSearchValue = value => {\n  return {\n    type: actions.setSearchValue,\n    payload: value\n  };\n};\nexport const fetchCurrentResources = facilityId => {\n  return {\n    type: actions.fetchCurrentResources,\n    payload: getFacilityResources(facilityId)\n  };\n};\nexport const fetchCurrentServices = facilityId => {\n  return {\n    type: actions.fetchCurrentServices,\n    payload: getFacilityServices(facilityId)\n  };\n};\nexport const fetchCurrentUtilities = facilityId => {\n  return {\n    type: actions.fetchCurrentUtilities,\n    payload: getFacilityUtilities(facilityId)\n  };\n};\nexport const postFacilityBasicDetails = (data, token) => {\n  return {\n    type: actions.postFacilityBasicDetails,\n    payload: postBasicDetails(data, token)\n  };\n};\nexport const patchFacilityBasicDetails = (data, facilityId, token) => {\n  return {\n    type: actions.putFacilityBasicDetails,\n    payload: putBasicDetails(data, facilityId, token)\n  };\n};\nexport const postFacilityContactDetails = (data, token) => {\n  return {\n    type: actions.putFacilityContactDetails,\n    payload: putContactDetails(data, token)\n  };\n};\nexport const patchFacilityContactDetails = (data, token) => {\n  return {\n    type: actions.putFacilityContactDetails,\n    payload: putContactDetails(data, token)\n  };\n};\nexport const postFacilityResources = (data, token) => {\n  return {\n    type: actions.postFacilityResources,\n    payload: postResources(data, token)\n  };\n};\nexport const patchFacilityResources = (data, token) => {\n  return {\n    type: actions.putFacilityResources,\n    payload: putResources(data, token)\n  };\n};\nexport const postFacilityUtilities = (data, token) => {\n  return {\n    type: actions.postFacilityUtilities,\n    payload: postUtilities(data, token)\n  };\n};\nexport const patchFacilityUtilities = (data, token) => {\n  return {\n    type: actions.putFacilityUtilities,\n    payload: putUtilities(data, token)\n  };\n};\nexport const deleteFacilityUtilities = (utilityId, token) => {\n  return {\n    type: actions.deleteFacilityUtilities,\n    payload: deleteUtilities(utilityId, token)\n  };\n};\nexport const postFacilityServices = (data, token) => {\n  return {\n    type: actions.postFacilityServices,\n    payload: postServices(data, token)\n  };\n};\nexport const patchFacilityServices = (data, token) => {\n  return {\n    type: actions.putFacilityServices,\n    payload: putServices(data, token)\n  };\n};\nexport const deleteFacilityServices = (serviceId, token) => {\n  return {\n    type: actions.deleteFacilityServices,\n    payload: deleteServices(serviceId, token)\n  };\n};\nexport const publishFacility = (data, token) => {\n  return {\n    type: actions.publishFacility,\n    payload: publish(data, token)\n  };\n};\nexport const addFilterValue = value => {\n  return {\n    type: actions.addFilterValue,\n    payload: value\n  };\n};\nexport const removeFilterValue = value => {\n  return {\n    type: actions.removeFilterValue,\n    payload: value\n  };\n};\nexport const removeAllFilterValue = () => {\n  return {\n    type: actions.removeAllFilterValues\n  };\n};\nexport const basicAdvancedFilter = filterValues => {\n  const districtsFilterOpt = filterValues.filter(filter => filter.type == \"districts\").map(opt => {\n    return {\n      district_id: opt.id\n    };\n  });\n  const facilityTypeFilterOpt = filterValues.filter(filter => filter.type == \"facilityTypes\").map(opt => {\n    return {\n      facility_type_id: opt.id\n    };\n  });\n  const regulatoryStatusFilterOpt = filterValues.filter(filter => filter.type == \"regulatoryStatuses\").map(opt => {\n    return {\n      facility_regulatory_status_id: opt.id\n    };\n  });\n  const operationalStatusFilterOpt = filterValues.filter(filter => filter.type == \"operationalStatuses\").map(opt => {\n    return {\n      facility_operational_status_id: opt.id\n    };\n  });\n  const ownerFilterOpt = filterValues.filter(filter => filter.type == \"facilityOwners\").map(opt => {\n    return {\n      facility_owner_id: opt.id\n    };\n  });\n  const FILTER = {\n    where: {\n      and: [{\n        or: districtsFilterOpt\n      }, {\n        or: facilityTypeFilterOpt\n      }, {\n        or: regulatoryStatusFilterOpt\n      }, {\n        or: operationalStatusFilterOpt\n      }, {\n        or: ownerFilterOpt\n      }]\n    }\n  };\n  return {\n    type: actions.basicAdvancedFilter,\n    payload: getFacilities(FILTER)\n  };\n};\nexport const resourcesAdvancedFilter = filterValues => {\n  let resFilterValues = filterValues.filter(filterValue => filterValue.type == \"resources\");\n  let filter = resFilterValues.length > 0 ? resFilterValues.map(filterValue => {\n    return {\n      and: [{\n        resource_id: filterValue.id\n      }, {\n        quantity: {\n          gte: filterValue.values[0]\n        }\n      }, {\n        quantity: {\n          lte: filterValue.values[1]\n        }\n      }]\n    };\n  }) : [];\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n  return {\n    type: actions.resourcesAdvancedFilter,\n    payload: getFacilityResources(-1, FILTER)\n  };\n};\nexport const utilitiesAdvancedFilter = filterValues => {\n  let utilFilterValues = filterValues.filter(filterValue => filterValue.type == \"utilities\");\n  let filter = utilFilterValues.length > 0 ? utilFilterValues.map(filterValue => {\n    return {\n      and: [{\n        utility_id: filterValue.id\n      }]\n    };\n  }) : [];\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n  return {\n    type: actions.utilitiesAdvancedFilter,\n    payload: getFacilityUtilities(-1, FILTER)\n  };\n};\nexport const servicesAdvancedFilter = filterValues => {\n  let serFilterValues = filterValues.filter(filterValue => filterValue.type == \"services\");\n  let filter = serFilterValues.length > 0 ? serFilterValues.map(filterValue => {\n    return {\n      and: [{\n        service_id: filterValue.id\n      }]\n    };\n  }) : [];\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n  return {\n    type: actions.servicesAdvancedFilter,\n    payload: getFacilityServices(-1, FILTER)\n  };\n};\nexport const fetchFilteredFacilities = (filterValues, filterResults) => {\n  const filterSets = [];\n  if (hasFilterValuesForType(\"basic\", filterValues)) filterSets.push(\"basic\");\n  if (hasFilterValuesForType(\"resources\", filterValues)) filterSets.push(\"resources\");\n  if (hasFilterValuesForType(\"utilities\", filterValues)) filterSets.push(\"utilities\");\n  if (hasFilterValuesForType(\"services\", filterValues)) filterSets.push(\"services\");\n  let filterArray = [];\n\n  for (let set of filterSets) {\n    if (set === \"basic\") {\n      filterArray.push(filterResults[set]);\n    } else {\n      filterArray.push(groupIntersect(filterResults[set]));\n    }\n  }\n\n  const facilityIds = groupIntersect([...filterArray]);\n  return {\n    type: actions.fetchFilteredFacilities,\n    payload: facilityIds\n  };\n};","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/services/redux/actions/facilities.tsx"],"names":["actions","getFacilities","getFacilityResources","getFacilityBasicDetails","getFacilityServices","getFacilityUtilities","postBasicDetails","postResources","postUtilities","postServices","publishFacility","publish","putBasicDetails","putContactDetails","putResources","putUtilities","deleteUtilities","putServices","deleteServices","groupIntersect","hasFilterValuesForType","fetchFacilities","type","payload","fetchCurrentBasic","facilityId","setQuickSearchValue","value","setSearchValue","fetchCurrentResources","fetchCurrentServices","fetchCurrentUtilities","postFacilityBasicDetails","data","token","patchFacilityBasicDetails","putFacilityBasicDetails","postFacilityContactDetails","putFacilityContactDetails","patchFacilityContactDetails","postFacilityResources","patchFacilityResources","putFacilityResources","postFacilityUtilities","patchFacilityUtilities","putFacilityUtilities","deleteFacilityUtilities","utilityId","postFacilityServices","patchFacilityServices","putFacilityServices","deleteFacilityServices","serviceId","addFilterValue","removeFilterValue","removeAllFilterValue","removeAllFilterValues","basicAdvancedFilter","filterValues","districtsFilterOpt","filter","map","opt","district_id","id","facilityTypeFilterOpt","facility_type_id","regulatoryStatusFilterOpt","facility_regulatory_status_id","operationalStatusFilterOpt","facility_operational_status_id","ownerFilterOpt","facility_owner_id","FILTER","where","and","or","resourcesAdvancedFilter","resFilterValues","filterValue","length","resource_id","quantity","gte","values","lte","utilitiesAdvancedFilter","utilFilterValues","utility_id","servicesAdvancedFilter","serFilterValues","service_id","fetchFilteredFacilities","filterResults","filterSets","push","filterArray","set","facilityIds"],"mappings":"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","sourcesContent":["import actions from \"./actions\";\nimport {\n  getFacilities,\n  getFacilityResources,\n  getFacilityBasicDetails,\n  getFacilityServices,\n  getFacilityUtilities,\n  postBasicDetails,\n  postResources,\n  postUtilities,\n  postServices,\n  publishFacility as publish,\n  putBasicDetails,\n  putContactDetails,\n  putResources,\n  putUtilities,\n  deleteUtilities,\n  putServices,\n  deleteServices\n} from \"../../api\";\nimport { groupIntersect, hasFilterValuesForType } from \"../../helpers\";\n\nexport const fetchFacilities = () => {\n  return {\n    type: actions.fetchFacilities,\n    payload: getFacilities()\n  };\n};\n\nexport const fetchCurrentBasic = (facilityId: number) => {\n  return {\n    type: actions.fetchCurrentBasic,\n    payload: getFacilityBasicDetails(facilityId)\n  };\n};\n\nexport const setQuickSearchValue = (value: any) => {\n  return {\n    type: actions.setSearchValue,\n    payload: value\n  };\n};\n\nexport const fetchCurrentResources = (facilityId: number) => {\n  return {\n    type: actions.fetchCurrentResources,\n    payload: getFacilityResources(facilityId)\n  };\n};\n\nexport const fetchCurrentServices = (facilityId: number) => {\n  return {\n    type: actions.fetchCurrentServices,\n    payload: getFacilityServices(facilityId)\n  };\n};\n\nexport const fetchCurrentUtilities = (facilityId: number) => {\n  return {\n    type: actions.fetchCurrentUtilities,\n    payload: getFacilityUtilities(facilityId)\n  };\n};\n\nexport const postFacilityBasicDetails = (data: any, token: string) => {\n  return {\n    type: actions.postFacilityBasicDetails,\n    payload: postBasicDetails(data, token)\n  };\n};\n\nexport const patchFacilityBasicDetails = (\n  data: any,\n  facilityId: number,\n  token: string\n) => {\n  return {\n    type: actions.putFacilityBasicDetails,\n    payload: putBasicDetails(data, facilityId, token)\n  };\n};\n\nexport const postFacilityContactDetails = (data: any, token: string) => {\n  return {\n    type: actions.putFacilityContactDetails,\n    payload: putContactDetails(data, token)\n  };\n};\n\nexport const patchFacilityContactDetails = (data: any, token: string) => {\n  return {\n    type: actions.putFacilityContactDetails,\n    payload: putContactDetails(data, token)\n  };\n};\n\nexport const postFacilityResources = (data: any, token: string) => {\n  return {\n    type: actions.postFacilityResources,\n    payload: postResources(data, token)\n  };\n};\n\nexport const patchFacilityResources = (data: any, token: string) => {\n  return {\n    type: actions.putFacilityResources,\n    payload: putResources(data, token)\n  };\n};\n\nexport const postFacilityUtilities = (data: any, token: string) => {\n  return {\n    type: actions.postFacilityUtilities,\n    payload: postUtilities(data, token)\n  };\n};\n\nexport const patchFacilityUtilities = (data: any, token: string) => {\n  return {\n    type: actions.putFacilityUtilities,\n    payload: putUtilities(data, token)\n  };\n};\n\nexport const deleteFacilityUtilities = (utilityId: number, token: string) => {\n  return {\n    type: actions.deleteFacilityUtilities,\n    payload: deleteUtilities(utilityId, token)\n  };\n};\n\nexport const postFacilityServices = (data: any, token: string) => {\n  return {\n    type: actions.postFacilityServices,\n    payload: postServices(data, token)\n  };\n};\n\nexport const patchFacilityServices = (data: any, token: string) => {\n  return {\n    type: actions.putFacilityServices,\n    payload: putServices(data, token)\n  };\n};\n\nexport const deleteFacilityServices = (serviceId: number, token: string) => {\n  return {\n    type: actions.deleteFacilityServices,\n    payload: deleteServices(serviceId, token)\n  };\n};\n\nexport const publishFacility = (data: any, token: string) => {\n  return {\n    type: actions.publishFacility,\n    payload: publish(data, token)\n  };\n};\n\nexport const addFilterValue = (value: {\n  type: string;\n  id: number;\n  label?: string;\n  range?: any;\n}) => {\n  return {\n    type: actions.addFilterValue,\n    payload: value\n  };\n};\n\nexport const removeFilterValue = (value: {\n  type: string;\n  id: number;\n  label?: string;\n  range?: any;\n}) => {\n  return {\n    type: actions.removeFilterValue,\n    payload: value\n  };\n};\n\nexport const removeAllFilterValue = () => {\n  return {\n    type: actions.removeAllFilterValues\n  };\n};\n\nexport const basicAdvancedFilter = (filterValues: Array<any>) => {\n  const districtsFilterOpt = filterValues\n    .filter(filter => filter.type == \"districts\")\n    .map(opt => {\n      return { district_id: opt.id };\n    });\n\n  const facilityTypeFilterOpt = filterValues\n    .filter(filter => filter.type == \"facilityTypes\")\n    .map(opt => {\n      return { facility_type_id: opt.id };\n    });\n\n  const regulatoryStatusFilterOpt = filterValues\n    .filter(filter => filter.type == \"regulatoryStatuses\")\n    .map(opt => {\n      return { facility_regulatory_status_id: opt.id };\n    });\n\n  const operationalStatusFilterOpt = filterValues\n    .filter(filter => filter.type == \"operationalStatuses\")\n    .map(opt => {\n      return { facility_operational_status_id: opt.id };\n    });\n\n  const ownerFilterOpt = filterValues\n    .filter(filter => filter.type == \"facilityOwners\")\n    .map(opt => {\n      return { facility_owner_id: opt.id };\n    });\n\n  const FILTER = {\n    where: {\n      and: [\n        { or: districtsFilterOpt },\n        { or: facilityTypeFilterOpt },\n        { or: regulatoryStatusFilterOpt },\n        { or: operationalStatusFilterOpt },\n        { or: ownerFilterOpt }\n      ]\n    }\n  };\n  return {\n    type: actions.basicAdvancedFilter,\n    payload: getFacilities(FILTER)\n  };\n};\n\nexport const resourcesAdvancedFilter = (filterValues: Array<any>) => {\n  let resFilterValues = filterValues.filter(\n    filterValue => filterValue.type == \"resources\"\n  );\n\n  let filter =\n    resFilterValues.length > 0\n      ? resFilterValues.map(filterValue => {\n          return {\n            and: [\n              { resource_id: filterValue.id },\n              { quantity: { gte: filterValue.values[0] } },\n              { quantity: { lte: filterValue.values[1] } }\n            ]\n          };\n        })\n      : [];\n\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n\n  return {\n    type: actions.resourcesAdvancedFilter,\n    payload: getFacilityResources(-1, FILTER)\n  };\n};\n\nexport const utilitiesAdvancedFilter = (filterValues: Array<any>) => {\n  let utilFilterValues = filterValues.filter(\n    filterValue => filterValue.type == \"utilities\"\n  );\n\n  let filter =\n    utilFilterValues.length > 0\n      ? utilFilterValues.map(filterValue => {\n          return {\n            and: [{ utility_id: filterValue.id }]\n          };\n        })\n      : [];\n\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n\n  return {\n    type: actions.utilitiesAdvancedFilter,\n    payload: getFacilityUtilities(-1, FILTER)\n  };\n};\n\nexport const servicesAdvancedFilter = (filterValues: Array<any>) => {\n  let serFilterValues = filterValues.filter(\n    filterValue => filterValue.type == \"services\"\n  );\n\n  let filter =\n    serFilterValues.length > 0\n      ? serFilterValues.map(filterValue => {\n          return {\n            and: [{ service_id: filterValue.id }]\n          };\n        })\n      : [];\n\n  const FILTER = {\n    where: {\n      or: filter\n    }\n  };\n\n  return {\n    type: actions.servicesAdvancedFilter,\n    payload: getFacilityServices(-1, FILTER)\n  };\n};\n\nexport const fetchFilteredFacilities = (\n  filterValues: Array<any>,\n  filterResults: Array<any>\n) => {\n  const filterSets: Array<any> = [];\n  if (hasFilterValuesForType(\"basic\", filterValues)) filterSets.push(\"basic\");\n\n  if (hasFilterValuesForType(\"resources\", filterValues))\n    filterSets.push(\"resources\");\n\n  if (hasFilterValuesForType(\"utilities\", filterValues))\n    filterSets.push(\"utilities\");\n\n  if (hasFilterValuesForType(\"services\", filterValues))\n    filterSets.push(\"services\");\n\n  let filterArray: Array<any> = [];\n\n  for (let set of filterSets) {\n    if (set === \"basic\") {\n      filterArray.push(filterResults[set]);\n    } else {\n      filterArray.push(groupIntersect(filterResults[set]));\n    }\n  }\n\n  const facilityIds = groupIntersect([...filterArray]);\n\n  return {\n    type: actions.fetchFilteredFacilities,\n    payload: facilityIds\n  };\n};\n"]},"metadata":{},"sourceType":"module"}