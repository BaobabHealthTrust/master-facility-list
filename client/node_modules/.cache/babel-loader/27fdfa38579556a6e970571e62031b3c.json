{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/scenes/Users/CreateUser.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  background: #eaeaea;\\n  text-align: right;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 800px;\\n  margin: auto;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Button from \"../../components/atoms/Button\";\nimport { Modal, withStyles, Paper } from \"@material-ui/core\";\nimport Card from \"../../components/atoms/Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport { userSchema } from \"../../components/organisms/UsersForms/schema\";\nimport { userInitialValues } from \"../../components/organisms/UsersForms/initialValues\";\nimport AddForm from \"../../components/organisms/UsersForms/AddUserForm\";\nimport { Formik } from \"formik\";\nimport { createUser, fetchUsers } from \"../../services/redux/actions/users\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../components/atoms/Notification\";\n\nclass SystemsModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: true\n    };\n\n    this.setOpen = open => {\n      this.setState({\n        open\n      });\n    };\n\n    this.onSubmit = (value, {\n      setSubmitting,\n      setErrors,\n      resetForm\n    }) => {\n      let data = _objectSpread({}, value, {\n        firstname: value.name.split(\" \")[0],\n        lastname: value.name.split(\" \").length > 0 ? value.name.split(\" \")[1] : \"\"\n      });\n\n      let token = sessionStorage.getItem(\"token\");\n      this.props.createUser({\n        data\n      }, token).then(() => {\n        toast.info(React.createElement(Notification, {\n          message: \"User Created Successfully!!!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n        this.props.fetchUsers(token);\n        resetForm();\n        this.setOpen(false);\n      }).catch(() => {\n        let errors = this.props.errors.addUser;\n        setErrors({\n          username: errors.username ? errors.username : \"\",\n          email: errors.email ? errors.email : \"\"\n        });\n        toast.info(React.createElement(Notification, {\n          error: true,\n          message: \"Failed To Create User. Please Try Again\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      });\n      setSubmitting(false);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: React.createElement(FontAwesomeIcon, {\n        icon: faPlusCircle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      onClick: () => {\n        this.setOpen(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add New User\"), React.createElement(StyledModal, {\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ModalContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: userInitialValues(),\n      validationSchema: userSchema,\n      onSubmit: this.onSubmit,\n      render: formikProps => React.createElement(React.Fragment, null, React.createElement(Card, {\n        style: {\n          minHeight: \"300px\"\n        },\n        bodyStyle: {\n          marginBottom: \"0px\"\n        },\n        heading: \"Add New User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(AddForm, Object.assign({}, this.props, formikProps, {\n        fromAdd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), \" \"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: formikProps.handleSubmit,\n        disabled: formikProps.isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Add User\"), React.createElement(Button, {\n        theme: \"default\",\n        onClick: () => {\n          this.setOpen(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Or Cancel\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createUser,\n  fetchUsers\n})(SystemsModal);\nconst StyledModal = withStyles({\n  root: {\n    zIndex: 1500,\n    display: \"flex\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    \"& :active\": {\n      outline: \"none\"\n    }\n  }\n})(Modal);\nconst ModalContainer = styled.div(_templateObject());\nconst ModalFooter = styled.div(_templateObject2());","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/scenes/Users/CreateUser.tsx"],"names":["React","Button","Modal","withStyles","Paper","Card","FontAwesomeIcon","faPlusCircle","styled","userSchema","userInitialValues","AddForm","Formik","createUser","fetchUsers","connect","toast","Notification","SystemsModal","Component","state","open","setOpen","setState","onSubmit","value","setSubmitting","setErrors","resetForm","data","firstname","name","split","lastname","length","token","sessionStorage","getItem","props","then","info","catch","errors","addUser","username","email","componentDidMount","render","formikProps","minHeight","marginBottom","handleSubmit","isSubmitting","mapStateToProps","StyledModal","root","zIndex","display","alignContent","alignItems","outline","ModalContainer","div","ModalFooter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"../../components/atoms/Button\";\nimport { Modal, withStyles, Paper } from \"@material-ui/core\";\nimport Card from \"../../components/atoms/Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport { userSchema } from \"../../components/organisms/UsersForms/schema\";\nimport { userInitialValues } from \"../../components/organisms/UsersForms/initialValues\";\nimport AddForm from \"../../components/organisms/UsersForms/AddUserForm\";\nimport { Formik } from \"formik\";\nimport { createUser, fetchUsers } from \"../../services/redux/actions/users\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../components/atoms/Notification\";\n\nclass SystemsModal extends React.Component<Props> {\n  state = {\n    open: true\n  };\n\n  setOpen = (open: boolean) => {\n    this.setState({ open });\n  };\n\n  componentDidMount() {\n    this.setState({ open: false });\n  }\n\n  onSubmit = (value: any, { setSubmitting, setErrors, resetForm }: any) => {\n    let data = {\n      ...value,\n      firstname: value.name.split(\" \")[0],\n      lastname: value.name.split(\" \").length > 0 ? value.name.split(\" \")[1] : \"\"\n    };\n\n    let token = sessionStorage.getItem(\"token\");\n    this.props\n      .createUser({ data }, token)\n      .then(() => {\n        toast.info(<Notification message=\"User Created Successfully!!!\" />);\n        this.props.fetchUsers(token);\n        resetForm();\n        this.setOpen(false);\n      })\n      .catch(() => {\n        let errors = this.props.errors.addUser;\n        setErrors({\n          username: errors.username ? errors.username : \"\",\n          email: errors.email ? errors.email : \"\"\n        });\n        toast.info(\n          <Notification\n            error\n            message=\"Failed To Create User. Please Try Again\"\n          />\n        );\n      });\n    setSubmitting(false);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button\n          icon={<FontAwesomeIcon icon={faPlusCircle} />}\n          onClick={() => {\n            this.setOpen(true);\n          }}\n        >\n          Add New User\n        </Button>\n        <StyledModal open={this.state.open}>\n          <ModalContainer>\n            <Paper>\n              <Formik\n                enableReinitialize={true}\n                initialValues={userInitialValues()}\n                validationSchema={userSchema}\n                onSubmit={this.onSubmit}\n                render={(formikProps: any) => (\n                  <>\n                    <Card\n                      style={{ minHeight: \"300px\" }}\n                      bodyStyle={{ marginBottom: \"0px\" }}\n                      heading=\"Add New User\"\n                    >\n                      <AddForm {...this.props} {...formikProps} fromAdd />{\" \"}\n                    </Card>\n                    <ModalFooter>\n                      <Button\n                        type=\"submit\"\n                        onClick={formikProps.handleSubmit}\n                        disabled={formikProps.isSubmitting}\n                      >\n                        Add User\n                      </Button>\n                      <Button\n                        theme=\"default\"\n                        onClick={() => {\n                          this.setOpen(false);\n                        }}\n                      >\n                        Or Cancel\n                      </Button>\n                    </ModalFooter>\n                  </>\n                )}\n              />\n            </Paper>\n          </ModalContainer>\n        </StyledModal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createUser, fetchUsers }\n)(SystemsModal);\n\ntype Props = {\n  createUser: Function;\n  fetchUsers: Function;\n  errors?: any;\n};\nconst StyledModal = withStyles({\n  root: {\n    zIndex: 1500,\n    display: \"flex\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    \"& :active\": {\n      outline: \"none\"\n    }\n  }\n})(Modal);\n\nconst ModalContainer = styled.div`\n  width: 800px;\n  margin: auto;\n`;\n\nconst ModalFooter = styled.div`\n  padding: 20px;\n  background: #eaeaea;\n  text-align: right;\n`;\n"]},"metadata":{},"sourceType":"module"}