{"ast":null,"code":"import _objectSpread from \"/Users/caspater/Projects/Work/mhfr/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/caspater/Projects/Work/mhfr/src/scenes/Facility/CreateFacility/index.tsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CreateFacility from \"./CreateFacility\";\nimport { fetchOwners } from \"../../../services/redux/actions/dependancies\";\nimport { postFacilityBasicDetails, postFacilityContactDetails, postFacilityResources, postFacilityUtilities, postFacilityServices, publishFacility, fetchFacilities } from \"../../../services/redux/actions/facilities\";\nimport { getBasicDetails, getContactDetails, getResources, getUtilities, getServices } from \"./helpers\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../../components/atoms/Notification\";\nexport class index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: \"Basic Details\",\n      facility: {\n        details: {},\n        contact: {},\n        resources: [],\n        utilities: [],\n        services: []\n      },\n      newFacility: {\n        id: 1\n      },\n      networkError: false,\n      networkErrorSavingDetails: []\n    };\n    this.formSections = [\"Basic Details\", \"Contacts & Location\", \"Resources\", \"Utilities\", \"Services\", \"Finish\"];\n\n    this.handleSubmit = async () => {\n      let data = JSON.parse((await localStorage.getItem(\"new_facility\")) || \"{}\");\n      let token = sessionStorage.getItem(\"token\");\n      let facility = null;\n      this.setState({\n        networkError: false,\n        networkErrorSavingDetails: []\n      });\n      let addFacility = await this.props.postFacilityBasicDetails(getBasicDetails(data.details), token).then(res => {\n        let tempFacility = res.action.payload.data;\n        this.props.publishFacility({\n          id: tempFacility.id,\n          district_id: tempFacility.district_id\n        }, token);\n        facility = tempFacility;\n        this.setState({\n          newFacility: facility\n        });\n        return true;\n      }).catch(e => {\n        this.setState({\n          networkError: true\n        });\n        return false;\n      });\n\n      if (facility != null) {\n        this.postDetails(data, facility, token);\n      }\n\n      this.props.fetchFacilities();\n      return addFacility;\n    };\n\n    this.onSubmit = async (values, key, nextTab) => {\n      this.setFacilityDetails(key, values);\n\n      if (nextTab == \"Finish\") {\n        if (!(await this.handleSubmit())) {\n          toast.info(React.createElement(Notification, {\n            error: true,\n            message: \"Failed To Create Facility, Try Again\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }));\n          return;\n        }\n      }\n\n      this.setNextActiveTab(nextTab);\n    };\n\n    this.setNextActiveTab = tabName => {\n      this.setState({\n        active: tabName\n      });\n      localStorage.setItem(\"new_facility_active_tab\", tabName);\n    };\n\n    this.setFacilityDetails = async (key, details) => {\n      var facility = _objectSpread({}, this.state.facility, {\n        [key]: details\n      });\n\n      this.setState({\n        facility\n      });\n      localStorage.setItem(\"new_facility\", JSON.stringify(facility));\n    };\n\n    this.onCancel = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.dependancies.owners.list.length == 0) {\n      this.props.fetchOwners();\n    }\n  }\n\n  postDetails(data, facility, token) {\n    this.props.postFacilityContactDetails(getContactDetails(data.contact, Number(facility.id)), token).catch(() => {\n      this.setState({\n        networkErrorSavingDetails: [...this.state.networkErrorSavingDetails, \"Contact Details\"]\n      });\n    });\n    this.props.postFacilityResources(getResources(data.resources, this.props.dependancies.resources.list, Number(facility.id)), token).catch(e => {\n      this.setState({\n        networkErrorSavingDetails: [...this.state.networkErrorSavingDetails, \"Resources\"]\n      });\n    });\n    this.props.postFacilityUtilities(getUtilities(data.utilities, Number(facility.id)), token).catch(e => {\n      this.setState({\n        networkErrorSavingDetails: [...this.state.networkErrorSavingDetails, \"Utilities\"]\n      });\n    });\n    this.props.postFacilityServices(getServices(data.services, Number(facility.id)), token).catch(e => {\n      this.setState({\n        networkErrorSavingDetails: [...this.state.networkErrorSavingDetails, \"Services\"]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(CreateFacility, {\n      sections: this.formSections,\n      active: this.state.active,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      dependancies: this.props.dependancies,\n      facility: this.state.newFacility,\n      errors: {\n        networkError: this.state.networkError,\n        networkErrorSavingDetails: this.state.networkErrorSavingDetails\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    drawerOpen: state.ui.advancedSearchOpen,\n    facilities: state.facilities.list,\n    dependancies: state.dependancies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchOwners,\n  postFacilityBasicDetails,\n  postFacilityContactDetails,\n  postFacilityResources,\n  postFacilityUtilities,\n  postFacilityServices,\n  publishFacility,\n  fetchFacilities\n})(index);","map":{"version":3,"sources":["/Users/caspater/Projects/Work/mhfr/src/scenes/Facility/CreateFacility/index.tsx"],"names":["React","Component","connect","CreateFacility","fetchOwners","postFacilityBasicDetails","postFacilityContactDetails","postFacilityResources","postFacilityUtilities","postFacilityServices","publishFacility","fetchFacilities","getBasicDetails","getContactDetails","getResources","getUtilities","getServices","toast","Notification","index","state","active","facility","details","contact","resources","utilities","services","newFacility","id","networkError","networkErrorSavingDetails","formSections","handleSubmit","data","JSON","parse","localStorage","getItem","token","sessionStorage","setState","addFacility","props","then","res","tempFacility","action","payload","district_id","catch","e","postDetails","onSubmit","values","key","nextTab","setFacilityDetails","info","setNextActiveTab","tabName","setItem","stringify","onCancel","history","goBack","componentDidMount","dependancies","owners","list","length","Number","render","mapStateToProps","drawerOpen","ui","advancedSearchOpen","facilities"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CreateFacility from \"./CreateFacility\";\nimport { fetchOwners } from \"../../../services/redux/actions/dependancies\";\nimport {\n  postFacilityBasicDetails,\n  postFacilityContactDetails,\n  postFacilityResources,\n  postFacilityUtilities,\n  postFacilityServices,\n  publishFacility,\n  fetchFacilities\n} from \"../../../services/redux/actions/facilities\";\nimport {\n  getBasicDetails,\n  getContactDetails,\n  getResources,\n  getUtilities,\n  getServices\n} from \"./helpers\";\nimport { toast } from \"react-toastify\";\nimport Notification from \"../../../components/atoms/Notification\";\nexport class index extends Component<Props> {\n  state = {\n    active: \"Basic Details\",\n    facility: {\n      details: {},\n      contact: {},\n      resources: [],\n      utilities: [],\n      services: []\n    },\n    newFacility: { id: 1 } as any,\n    networkError: false,\n    networkErrorSavingDetails: [] as Array<any>\n  };\n\n  formSections = [\n    \"Basic Details\",\n    \"Contacts & Location\",\n    \"Resources\",\n    \"Utilities\",\n    \"Services\",\n    \"Finish\"\n  ];\n\n  componentDidMount() {\n    if (this.props.dependancies.owners.list.length == 0) {\n      this.props.fetchOwners();\n    }\n  }\n\n  postDetails(data: any, facility: any, token: string | null) {\n    this.props\n      .postFacilityContactDetails(\n        getContactDetails(data.contact, Number(facility.id)),\n        token\n      )\n      .catch(() => {\n        this.setState({\n          networkErrorSavingDetails: [\n            ...this.state.networkErrorSavingDetails,\n            \"Contact Details\"\n          ]\n        });\n      });\n\n    this.props\n      .postFacilityResources(\n        getResources(\n          data.resources,\n          this.props.dependancies.resources.list,\n          Number(facility.id)\n        ),\n        token\n      )\n      .catch((e: any) => {\n        this.setState({\n          networkErrorSavingDetails: [\n            ...this.state.networkErrorSavingDetails,\n            \"Resources\"\n          ]\n        });\n      });\n\n    this.props\n      .postFacilityUtilities(\n        getUtilities(data.utilities, Number(facility.id)),\n        token\n      )\n      .catch((e: any) => {\n        this.setState({\n          networkErrorSavingDetails: [\n            ...this.state.networkErrorSavingDetails,\n            \"Utilities\"\n          ]\n        });\n      });\n\n    this.props\n      .postFacilityServices(\n        getServices(data.services, Number(facility.id)),\n        token\n      )\n      .catch((e: any) => {\n        this.setState({\n          networkErrorSavingDetails: [\n            ...this.state.networkErrorSavingDetails,\n            \"Services\"\n          ]\n        });\n      });\n  }\n\n  handleSubmit = async () => {\n    let data = JSON.parse((await localStorage.getItem(\"new_facility\")) || \"{}\");\n    let token = sessionStorage.getItem(\"token\");\n    let facility: any = null;\n    this.setState({ networkError: false, networkErrorSavingDetails: [] });\n    let addFacility = await this.props\n      .postFacilityBasicDetails(getBasicDetails(data.details), token)\n      .then((res: any) => {\n        let tempFacility = res.action.payload.data;\n        this.props.publishFacility(\n          {\n            id: tempFacility.id,\n            district_id: tempFacility.district_id\n          },\n          token\n        );\n        facility = tempFacility;\n        this.setState({ newFacility: facility });\n        return true;\n      })\n      .catch((e: any) => {\n        this.setState({ networkError: true });\n        return false;\n      });\n\n    if (facility != null) {\n      this.postDetails(data, facility, token);\n    }\n    this.props.fetchFacilities();\n    return addFacility;\n  };\n\n  onSubmit = async (values: any, key: string, nextTab: string) => {\n    this.setFacilityDetails(key, values);\n    if (nextTab == \"Finish\") {\n      if (!(await this.handleSubmit())) {\n        toast.info(\n          <Notification error message=\"Failed To Create Facility, Try Again\" />\n        );\n        return;\n      }\n    }\n    this.setNextActiveTab(nextTab);\n  };\n\n  setNextActiveTab = (tabName: string) => {\n    this.setState({ active: tabName });\n    localStorage.setItem(`new_facility_active_tab`, tabName);\n  };\n\n  setFacilityDetails = async (key: string, details: any) => {\n    var facility = {\n      ...this.state.facility,\n      [key]: details\n    };\n    this.setState({ facility });\n    localStorage.setItem(\"new_facility\", JSON.stringify(facility));\n  };\n\n  onCancel = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    return (\n      <CreateFacility\n        sections={this.formSections}\n        active={this.state.active}\n        onSubmit={this.onSubmit}\n        onCancel={this.onCancel}\n        dependancies={this.props.dependancies}\n        facility={this.state.newFacility}\n        errors={{\n          networkError: this.state.networkError,\n          networkErrorSavingDetails: this.state.networkErrorSavingDetails\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    drawerOpen: state.ui.advancedSearchOpen,\n    facilities: state.facilities.list,\n    dependancies: state.dependancies\n  };\n};\n\ntype Props = {\n  drawerOpen: boolean;\n  toggleFacilityFilter: Function;\n  facilities: Array<any>;\n  dependancies: any;\n  fetchOwners: Function;\n  history: any;\n  postFacilityBasicDetails: Function;\n  postFacilityContactDetails: Function;\n  postFacilityResources: Function;\n  postFacilityUtilities: Function;\n  postFacilityServices: Function;\n  publishFacility: Function;\n  fetchFacilities: Function;\n};\nexport default connect(\n  mapStateToProps,\n  {\n    fetchOwners,\n    postFacilityBasicDetails,\n    postFacilityContactDetails,\n    postFacilityResources,\n    postFacilityUtilities,\n    postFacilityServices,\n    publishFacility,\n    fetchFacilities\n  }\n)(index);\n"]},"metadata":{},"sourceType":"module"}